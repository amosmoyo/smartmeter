{"version":3,"sources":["webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/users/login/login.component.html","webpack:///./src/app/components/users/signup/signup.component.html","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/users/login/login.component.css","webpack:///./src/app/components/users/login/login.component.ts","webpack:///./src/app/components/users/match-value.directive.ts","webpack:///./src/app/components/users/password.validators.ts","webpack:///./src/app/components/users/signup/signup.component.css","webpack:///./src/app/components/users/signup/signup.component.ts","webpack:///./src/app/components/users/user.module.ts"],"names":[],"mappings":"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","file":"components-users-user-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\n  <header class=\\\"border border-success\\\" style=\\\"border-radius: 10px;\\\">\\n   <div  class=\\\"p-2\\\">\\n     <div class=\\\"text-center\\\">\\n      <h3 style=\\\"color: green;\\\">smArtUI</h3>\\n      <p>User Details</p>\\n     </div>\\n     <div class=\\\"row mb-2 justify-content-between\\\">\\n      <div class=\\\"col-sm-5\\\"><button mat-raised-button style=\\\"color:#28a745;\\\">Created~ {{user?.createdAt | date: 'shortDate' }}</button></div>\\n      <div class=\\\"col-sm-5\\\"><button mat-raised-button style=\\\"color: #28a745;\\\">ID~ {{user?._id}}</button></div>\\n    </div>\\n     <div class=\\\"row mb-2 justify-content-between\\\" *ngIf=\\\"user\\\">\\n      <div class=\\\"col-sm-5\\\"><i class=\\\"fa fa-envelope-o\\\"></i>~ {{user?.email}}</div>\\n      <div class=\\\"col-sm-5\\\"><i class=\\\"fa fa-user\\\"></i>~ {{user?.userName}}</div>\\n    </div>\\n   </div>\\n  </header>\\n  <br>\\n  <br>\\n  <main>\\n    <h2 class=\\\"text-center \\\"><span class=\\\"bg-success p-2 text-light border rounded\\\">My SmartMeter</span></h2>\\n    <div>\\n      <h4 class=\\\"mt-2 mb-0\\\"><span class=\\\"bg-info text-light border px-2\\\"  style=\\\"border-radius: 10px;\\\">Electricity</span></h4>\\n      <div class=\\\"border border-info\\\" style=\\\"border-radius: 10px;\\\">\\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos soluta maiores aliquam nostrum distinctio fuga velit quaerat, error ipsum enim, qui voluptates nemo esse. Quaerat maxime similique harum rem officiis quibusdam suscipit iste accusantium ducimus excepturi, repellendus voluptatem quidem natus, nobis iure expedita asperiores cum, eaque temporibus tenetur vero corrupti.</div>\\n    </div>\\n    <div>\\n      <h4 class=\\\"mt-2 mb-0\\\"><span class=\\\"bg-danger text-light border px-2\\\"  style=\\\"border-radius: 10px;\\\">Gas</span></h4>\\n      <div class=\\\"border border-danger\\\" style=\\\"border-radius: 10px;\\\">\\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Perspiciatis, officia. Officia nemo molestias excepturi eaque! Ut, necessitatibus consequatur eveniet debitis quisquam adipisci culpa incidunt eos eum rem possimus non quod architecto voluptate nulla animi provident sequi natus dolorum tempora voluptatibus in labore enim explicabo! Repellat voluptas corrupti adipisci est quod.\\n      </div>\\n    </div>\\n    <div>\\n      <h4 class=\\\"mt-2 mb-0\\\"><span class=\\\"bg-warning text-light border px-2\\\"  style=\\\"border-radius: 10px;\\\">Gas</span></h4>\\n      <div class=\\\"border border-warning\\\" style=\\\"border-radius: 10px;\\\">\\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aliquam magni, molestias consectetur ipsam delectus ut distinctio doloremque laudantium nulla animi cumque? Consequuntur amet, impedit quaerat placeat fugit aliquid suscipit doloribus laborum est maxime dolores facilis optio ipsam quo nam? Maxime quod magni est. Blanditiis quae culpa quam quos tempore fugiat?\\n      </div>\\n    </div>\\n  </main>\\n</div>\\n\"","module.exports = \"<div class=\\\"container pt-3\\\">\\n  <div class=\\\"text-center animate__animated animate__bounceInRight mb-3\\\">\\n    <span class=\\\"d-block\\\"><i class=\\\"fa fa-user\\\"></i></span>\\n    <h1 style=\\\"color: green;\\\">smArtUI</h1>\\n    <p class=\\\"text-success mb-2 font-weight-bold\\\">User's Point</p>\\n    <p class=\\\"lead mb-2\\\" *ngIf=\\\"!loading\\\">Please Login Here...</p>\\n    <p class=\\\"lead mb-2\\\" *ngIf=\\\"loading\\\">Loading...</p>\\n  </div>\\n  <br>\\n  <mat-spinner *ngIf=\\\"loading\\\" class=\\\"amos\\\"></mat-spinner>\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"!loading\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <div>\\n        <form #login=\\\"ngForm\\\" [matchValue]=\\\"['password','confirmPassword']\\\" (ngSubmit)=\\\"save(login)\\\">\\n\\n          <div class=\\\"row justify-content-around\\\">\\n            <div class=\\\"col-md-5\\\">\\n              <mat-form-field class=\\\"input\\\">\\n                <input matInput type=\\\"email\\\" placeholder=\\\"email(required)\\\" name=\\\"email\\\" ngModel #email=\\\"ngModel\\\"\\n                  required email class=\\\"p-0 m-0\\\">\\n              </mat-form-field>\\n              <mat-error *ngIf=\\\"email.invalid && (email.touched || email.dirty)\\\" class=\\\"mt-0\\\">\\n                <em *ngIf=\\\"email.errors.required\\\">email is required</em>\\n                <em *ngIf=\\\"email.errors.email\\\">enter a valid email</em>\\n              </mat-error>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n              <mat-form-field class=\\\"input\\\">\\n                <input matInput type=\\\"password\\\" placeholder=\\\"password(required)\\\" name=\\\"password\\\" ngModel\\n                  #password=\\\"ngModel\\\" required minlength=\\\"4\\\" class=\\\"p-0 m-0\\\">\\n              </mat-form-field>\\n              <mat-error *ngIf=\\\"password.invalid && (password.touched || password.dirty)\\\" class=\\\"mt-0\\\">\\n                <em *ngIf=\\\"password.errors.required\\\">password is required</em>\\n                <em *ngIf=\\\"password.errors.minlength\\\">password is too short</em>\\n              </mat-error>\\n            </div>\\n          </div>\\n\\n          <div>\\n            <div style=\\\"width: 80%;\\\" class=\\\"mx-auto\\\">\\n              <button mat-raised-button\\n                style=\\\"width: 100%; display: block; background-color: #28a745; color: #ffffff\\\" [disabled]=\\\"login.invalid\\\">Save</button>\\n              <button mat-raised-button\\n                style=\\\"width: 100%; display: block; background-color: #333534; color: #ffffff; margin-top: 10px;\\\">cancel</button>\\n                <p class=\\\"mt-2 text-success\\\">DON'T HAVE AN ACCOUNT? PLAESE <em class=\\\"text-danger\\\" [routerLink]=\\\"['/users/signup']\\\" style=\\\"cursor: pointer;\\\">REGISTER</em></p>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container mt-3\\\">\\n  <div class=\\\"text-center animate__animated animate__bounceInRight mb-2\\\">\\n    <span class=\\\"d-block\\\"><i class=\\\"fa fa-user\\\"></i></span>\\n    <h1 style=\\\"color: green;\\\">smArtUI</h1>\\n    <p class=\\\"text-success mb-2 font-weight-bold\\\">User's Point</p>\\n    <p class=\\\"lead mb-2\\\" *ngIf=\\\"!loading\\\">Please Register Here...</p>\\n    <p class=\\\"lead mb-2\\\" *ngIf=\\\"loading\\\">Loading...</p>\\n  </div>\\n  <br>\\n  <mat-spinner *ngIf=\\\"loading\\\" class=\\\"amos\\\"></mat-spinner>\\n  <div class=\\\"row justify-content-center\\\" *ngIf=\\\"!loading\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <div>\\n        <form #signup=\\\"ngForm\\\" [matchValue]=\\\"['password','confirmPassword']\\\" (ngSubmit)=\\\"save(signup)\\\">\\n          <div class=\\\"row justify-content-around\\\">\\n            <div class=\\\"col-md-5\\\">\\n              <mat-form-field class=\\\"input mb-0\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"firstname(required)\\\" name=\\\"fname\\\" ngModel #fname=\\\"ngModel\\\"\\n                  required class=\\\"p-0 m-0\\\">\\n              </mat-form-field>\\n              <mat-error *ngIf=\\\"fname.invalid && (fname.touched || fname.dirty)\\\" class=\\\"mt-0\\\">\\n                <em *ngIf=\\\"fname.errors.required\\\" class=\\\"mt-0\\\">firstname is required</em>\\n              </mat-error>\\n            </div>\\n            <div class=\\\"col-md-5 mb-0\\\">\\n              <mat-form-field class=\\\"input\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"lastName(required)\\\" name=\\\"lname\\\" ngModel #lname=\\\"ngModel\\\"\\n                  required class=\\\"p-0 m-0\\\">\\n              </mat-form-field>\\n              <mat-error *ngIf=\\\"lname.invalid && (lname.touched || lname.dirty)\\\" class=\\\"mt-0\\\">\\n                <em *ngIf=\\\"lname.errors.required\\\" class=\\\"mt-0\\\">lastname is required</em>\\n              </mat-error>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row justify-content-around\\\">\\n            <div class=\\\"col-md-5\\\">\\n              <mat-form-field class=\\\"input\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"username(required)\\\" name=\\\"userName\\\" ngModel #username=\\\"ngModel\\\"\\n                  required class=\\\"p-0 m-0\\\">\\n                <mat-error *ngIf=\\\"username.invalid && (username.touched || username.dirty)\\\" class=\\\"mt-0\\\">\\n                  <em *ngIf=\\\"username.errors.required\\\">username is required</em>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n              <mat-form-field class=\\\"input\\\">\\n                <input matInput type=\\\"email\\\" placeholder=\\\"email(required)\\\" name=\\\"email\\\" ngModel #email=\\\"ngModel\\\"\\n                  required email class=\\\"p-0 m-0\\\">\\n              </mat-form-field>\\n              <mat-error *ngIf=\\\"email.invalid && (email.touched || email.dirty)\\\" class=\\\"mt-0\\\">\\n                <em *ngIf=\\\"email.errors.required\\\">email is required</em>\\n                <em *ngIf=\\\"email.errors.email\\\">enter a valid email</em>\\n              </mat-error>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row justify-content-around\\\">\\n            <div class=\\\"col-md-5\\\">\\n              <mat-form-field class=\\\"input\\\">\\n                <input matInput type=\\\"password\\\" placeholder=\\\"password(required)\\\" name=\\\"password\\\" ngModel\\n                  #password=\\\"ngModel\\\" required minlength=\\\"4\\\" class=\\\"p-0 m-0\\\">\\n              </mat-form-field>\\n              <mat-error *ngIf=\\\"password.invalid && (password.touched || password.dirty)\\\" class=\\\"mt-0\\\">\\n                <em *ngIf=\\\"password.errors.required\\\">password is required</em>\\n                <em *ngIf=\\\"password.errors.minlength\\\">password is too short</em>\\n              </mat-error>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n              <mat-form-field class=\\\"input\\\">\\n                <input matInput type=\\\"password\\\" placeholder=\\\"confirmpass(required)\\\" name=\\\"confirmPassword\\\" ngModel\\n                  #confirmPassword=\\\"ngModel\\\" required class=\\\"m-0 p-0\\\">\\n                <mat-error *ngIf=\\\"confirmPassword.invalid && (confirmPassword.touched || confirmPassword.dirty)\\\">\\n                  <em *ngIf=\\\"confirmPassword.errors.required\\\">confirm password required</em>\\n                  <em *ngIf=\\\"confirmPassword.errors.matchValueError\\\">password does not match</em>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n          <div>\\n            <div style=\\\"width: 80%;\\\" class=\\\"mx-auto\\\">\\n              <button mat-raised-button style=\\\"width: 100%; display: block; background-color: #28a745; color: #ffffff\\\"\\n                [disabled]=\\\"signup.invalid\\\">Save</button>\\n              <button mat-raised-button\\n                style=\\\"width: 100%; display: block; background-color: #333534; color: #ffffff; margin-top: 10px;\\\">cancel</button>\\n                <p class=\\\"mt-2 text-success\\\">HAVE AN ACCOUNT? PLAESE <em class=\\\"text-danger\\\" [routerLink]=\\\"['/users/login']\\\" style=\\\"cursor: pointer;\\\">LOGIN</em></p>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Iuser } from 'src/app/Iuser';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  user: Iuser;\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n    this.auth.profile().subscribe({\n      next: (data: Iuser) => {\n        console.log(data);\n        this.user = data;\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    });\n  }\n\n}\n","module.exports = \".input {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.fa {\\r\\n  font-size: 1.4em;\\r\\n  color: #450f5a;\\r\\n}\\r\\n\\r\\n.amos {\\r\\n  position: relative;\\r\\n  margin-left: 50%;\\r\\n  margin-right: 50%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2Vycy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlcnMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbnB1dCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5mYSB7XHJcbiAgZm9udC1zaXplOiAxLjRlbTtcclxuICBjb2xvcjogIzQ1MGY1YTtcclxufVxyXG5cclxuLmFtb3Mge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW4tbGVmdDogNTAlO1xyXG4gIG1hcmdpbi1yaWdodDogNTAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  authStatus: Subscription;\n\n  loading;\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n    this.authStatus = this.auth.getAuthStatus().subscribe({\n      next: (data) => {\n        this.loading = data;\n      }\n    });\n  }\n\n  save(form: NgForm) {\n   if (form.invalid) {\n     return;\n   }\n   this.loading = true;\n\n   console.log(form.value);\n   this.auth.login(form.value);\n   form.resetForm();\n  }\n\n  ngOnDestroy() {\n    this.authStatus.unsubscribe();\n  }\n\n}\n","import { Directive, Input } from '@angular/core';\nimport { Validator,   ValidationErrors, FormGroup, NG_VALIDATORS, AbstractControl } from '@angular/forms';\nimport { MatchValue } from './password.validators';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[matchValue]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: MatchValueDirective, multi: true }\n  ]\n})\nexport class MatchValueDirective implements Validator {\n  @Input('matchValue') matchValueFields: string[] = [];\n\n  constructor() { }\n\n  validate(formGroup: FormGroup): ValidationErrors {\n    return MatchValue(this.matchValueFields[0], this.matchValueFields[1])(\n      formGroup\n    );\n  }\n\n  /*\n  registerOnValidatorChange?(fn: () => void): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  */\n}\n\n/*\nimport { Directive, Input } from '@angular/core';\nimport {\n  Validator,\n  ValidationErrors,\n  FormGroup,\n  NG_VALIDATORS\n} from '@angular/forms';\nimport { MatchValue } from './match-value.validator';\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: \"[matchValue]\",\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: MatchValueDirective, multi: true }\n  ]\n})\nexport class MatchValueDirective implements Validator {\n  @Input(\"matchValue\") matchValueFields: string[] = [];\n  constructor() {}\n  validate(formGroup: FormGroup): ValidationErrors {\n    return MatchValue(this.matchValueFields[0], this.matchValueFields[1])(\n      formGroup\n    );\n  }\n}\n*/\n","import { FormGroup } from '@angular/forms';\r\n// custom validator to check that two fields match\r\n// tslint:disable-next-line: no-unused-expression\r\nexport const MatchValue = (firstControlName: string, secondControlName: string ) => {\r\n  return (formGroup: FormGroup) => {\r\n    const firstControl = formGroup.controls[firstControlName];\r\n    const secondControl = formGroup.controls[secondControlName];\r\n    // return null if controls haven't initialised yet\r\n    if (\r\n      !firstControl ||\r\n      !secondControl ||\r\n      !firstControl.value ||\r\n      !secondControl.value\r\n    ) {\r\n      return null;\r\n    }\r\n    if (secondControl.errors && !secondControl.errors.matchValueError) {\r\n      return null;\r\n    }\r\n    if (firstControl.value !== secondControl.value) {\r\n      secondControl.setErrors({ matchValueError: true });\r\n    } else {\r\n      secondControl.setErrors(null);\r\n    }\r\n  };\r\n};\r\n","module.exports = \".input {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.error input {\\r\\n  background-color: rgb(241, 168, 168);\\r\\n}\\r\\n\\r\\n.fa {\\r\\n  font-size: 1.4em;\\r\\n  color: #450f5a;\\r\\n}\\r\\n\\r\\n.amos {\\r\\n  position: relative;\\r\\n  margin-left: 50%;\\r\\n  margin-right: 50%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2Vycy9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91c2Vycy9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5wdXQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uZXJyb3IgaW5wdXQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDEsIDE2OCwgMTY4KTtcclxufVxyXG5cclxuLmZhIHtcclxuICBmb250LXNpemU6IDEuNGVtO1xyXG4gIGNvbG9yOiAjNDUwZjVhO1xyXG59XHJcblxyXG4uYW1vcyB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1hcmdpbi1sZWZ0OiA1MCU7XHJcbiAgbWFyZ2luLXJpZ2h0OiA1MCU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Iuser } from 'src/app/Iuser';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n\n  authStatus: Subscription;\n\n  loading;\n\n  constructor(private auth: AuthService ) { }\n\n  ngOnInit() {\n    this.authStatus = this.auth.getAuthStatus().subscribe({\n      next: (data) => {\n        this.loading = data;\n      }\n    });\n  }\n\n  save(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    console.log(form.value);\n    const user: Iuser = {\n      fname: form.value.fname,\n      lname: form.value.lname,\n      userName: form.value.userName,\n      email: form.value.email,\n      password: form.value.password\n    };\n\n    this.auth.signup(user);\n    form.resetForm();\n  }\n\n  ngOnDestroy(): void {\n    this.authStatus.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Material } from '../material/material.module';\r\nimport { MatchValueDirective } from './match-value.directive';\r\nimport { DashboardComponent } from '../dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n  { path: 'dashboard', component: DashboardComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, SignupComponent, DashboardComponent, MatchValueDirective],\r\n  imports: [ CommonModule, ReactiveFormsModule, RouterModule.forChild(routes), FormsModule, Material],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserModule {}\r\n"],"sourceRoot":""}